name: Deploy CDK Stack

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Git branch to deploy'
        required: true
        default: 'main'
      environment:
        description: 'Deployment environment (dev or prod)'
        required: true
        default: dev
        type: environment

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Install AWS CDK
        run: npm install -g aws-cdk

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.REGION }}

      - name: Deploy CDK Stack
        env:
          ENV: ${{ github.event.inputs.environment }}
          PARENT_HOSTED_ZONE_ID: ${{ secrets.PARENT_HOSTED_ZONE_ID }}
          PARENT_DOMAIN_NAME: ${{ secrets.PARENT_DOMAIN_NAME }}
          ACCOUNT_ID: ${{ secrets.ACCOUNT_ID }}
          VPC_ID: ${{ secrets.VPC_ID }} 
          DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}
          SUBDOMAIN: ${{ secrets.SUBDOMAIN }}
          YOUR_IP: ${{ secrets.YOUR_IP }}
          REGION: ${{ secrets.REGION }}
          WHITELIST_DOMAINS: ${{ secrets.WHITELIST_DOMAINS }}
        run: |
          npx cdk deploy --require-approval never \
            -c env=${ENV} \
            -c parentHostedZoneId=${PARENT_HOSTED_ZONE_ID} \
            -c parentDomainName=${PARENT_DOMAIN_NAME} \
            -c accountId=${ACCOUNT_ID} \
            -c region=${REGION} \
            -c vpcId=${VPC_ID} \
            -c domainName=${DOMAIN_NAME} \
            -c subdomain=${SUBDOMAIN} \
            -c yourIp=${YOUR_IP} \
            -c whitelistDomainsParameter=${WHITELIST_DOMAINS}
